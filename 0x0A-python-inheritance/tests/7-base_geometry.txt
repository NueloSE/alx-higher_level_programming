Test for module ``7-base_geometry``
===================================

import module
-------------
::
    >>> base = __import__('7-base_geometry').BaseGeometry

Test with valid argument:
-------------------------
::
    >>> bg = base()
    >>> bg.integer_validator("some", 43)

Test with one argument:
-----------------------
::
    >>> bg.integer_validator("something") # doctest: +NORMALIZE_WHITESPACE
    Traceback (most recent call last):
        ...
    TypeError: BaseGeometry.integer_validator()
    missing 1 required positional argument: 'value'
    
The second argument is float or string
--------------------------------------

::
    >>> bg.integer_validator("Nuelo", 32.3)
    Traceback (most recent call last):
    TypeError: Nuelo must be an integer
    >>> bg.integer_validator("Nuelo", '32.3')
    Traceback (most recent call last):
    TypeError: Nuelo must be an integer

The second is zero or negative
------------------------------

::
    >>> bg.integer_validator("okay", 0)
    Traceback (most recent call last):
    ValueError: okay must be greater than 0
    >>> bg.integer_validator('okay', -4)
    Traceback (most recent call last):
    ValueError: okay must be greater than 0
    