=================================
Testing ``100-matrix_mul`` module
=================================

import the module
-----------------

::
    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Usage
------

Testing correct case:
::
    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    [[7, 10], [15, 22]]

    >>> matrix_mul([[1.2, 2.1], [3.1, 4.1]], [[1.1, 2.2], [3.2, 4.1]])
    [[8.040000000000001, 11.25], [16.53, 23.63]]

Passing string value

::
    >>> matrix_mul([[1, 2], [3, 4]], "string")
    Traceback (most recent call last):
    TypeError: m_b must be a list
    
    >>> matrix_mul("string", [[1, 2], [3, 4]])
    Traceback (most recent call last):
    TypeError: m_a must be a list

    >>> matrix_mul("string1", "string2")
    Traceback (most recent call last):
    TypeError: m_a must be a list

Passing an empty list of list
    >>> matrix_mul([[1, 2], [3, 4]], [[]])
    Traceback (most recent call last):
    ValueError: m_b can't be empty

    >>> matrix_mul([[]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ValueError: m_a can't be empty
    
    >>> matrix_mul([[]], [[]])
    Traceback (most recent call last):
    ValueError: m_a can't be empty
    
Passing a list of list with character
::
    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, '4']])
    Traceback (most recent call last):
    TypeError: m_b should contain only integers or floats
    
    >>> matrix_mul([[1, 2], [3, '4']], [[1, 2], [3, '4']])
    Traceback (most recent call last):
    TypeError: m_a should contain only integers or floats

    >>> matrix_mul([[1, 2], [3, '4']], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    TypeError: m_a should contain only integers or floats

passing a list
::
    >>> matrix_mul([[1, 2], [3, 4]], [1, 2, 3])
    Traceback (most recent call last):
    TypeError: m_b must be a list of lists

    >>> matrix_mul([1, 2, 3], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    TypeError: m_a must be a list of lists

    >>> matrix_mul([1, 2, 3], [1, 2, 3])
    Traceback (most recent call last):
    TypeError: m_a must be a list of lists

passing matrix of different row size

::
    >>> matrix_mul([[1, 2, 3], [3, 4]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    TypeError: each row of m_a must be of the same size

    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2, 3], [3, 4]])
    Traceback (most recent call last):
    TypeError: each row of m_b must be of the same size

    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2, 3], [3, 4, 5], [1, 2, 3]])
    Traceback (most recent call last):
    ValueError: m_a and m_b can't be multiplied

Missing one positional argument

::
    >>> matrix_mul([[1, 2], [3, 4]])
    Traceback (most recent call last):
    TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

    >>> matrix_mul()
    Traceback (most recent call last):
    TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
    